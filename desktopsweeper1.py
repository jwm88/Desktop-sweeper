"""
A program to clean up my filthy desktop, or any other folder that needs it

Requires two .txt files, 'doctypes.txt' and 'mediatypes.txt'. 
These are provided and should be added to as needed.
These files contain file extensions, each on a new line, WITHOUT a leading '.'.S

The program asks the user to select a directory to clean, then reads through 
all the files in the chosen directory and sorts them into __MEDIA, 
__DOCUMENT, and __MISC folders, based on the filetypes in the two .txt files.

The following file types will not be moved: lnk, db, appref-ms, tmp.

Outputs a log file in txt format describing the files read and moved, this will
be saved in the directory the script is located.

============================================================
IMPORTANT! Has only been tested on windows 7 and windows 8.1 
============================================================
"""

import Tkinter, tkFileDialog
from os import path,listdir,mkdir
from shutil import move
from datetime import datetime

def read_types():
    """Read in the media and document filetypes"""
    docfile=open('doctypes.txt')
    doctypes=docfile.read().splitlines()
    docfile.close()
    
    mediafile=open('mediatypes.txt')
    mediatypes=mediafile.read().splitlines()
    mediafile.close()    
    
    return doctypes, mediatypes

def select_dir():
    """Open a dialog and ask the user to select a directory"""
    root = Tkinter.Tk()
    root.withdraw()
    dirname = tkFileDialog.askdirectory(parent=root, initialdir="/", 
                                        title='Please select a directory')
    mediapath = dirname + '/__MEDIA'
    docpath = dirname + '/__DOCUMENTS'
    miscpath = dirname + '/__MISC'
    
    return dirname    


def check_dir(dirname):
    """check if __MEDIA,__DOCUMENTS, and __MISC folders exist in chosen dir,
    if not, create them"""
    
    mediapath = dirname + '/__MEDIA'
    docpath = dirname + '/__DOCUMENTS'
    miscpath = dirname + '/__MISC'    
    
    if not path.isdir(mediapath):
        mkdir(mediapath)
    if not path.isdir(docpath):
        mkdir(docpath)
    if not path.isdir(miscpath):
        mkdir(miscpath)
        
    return docpath, mediapath, miscpath
        
def get_files(dirname):
    """generates a list containing all the files in the directory"""
    filelist=[]
    for i in listdir(dirname):
        if path.isfile(dirname + '/' + i):
            filelist.append((dirname + '/' + i))
    return filelist

def sort_types(filelist):
    """Take the list of files and produce three lists based on the filetypes
    in doctypes.txt and mediatypes.txt"""
    docfiles=[]
    mediafiles=[]
    miscfiles=[]
    
    badextensions=["lnk","db","appref-ms","tmp"]
    """loop through each file and check its type, then add it to the 
    appropriate list, excluding shortcuts ("lnk")"""
    
    for file in filelist:
        fileExtension=file.split(".")[-1]
        if fileExtension in doctypes:
            docfiles.append(file)
        elif fileExtension in mediatypes:
            mediafiles.append(file)
        elif fileExtension not in badextensions:
            miscfiles.append(file)
            
    return docfiles, mediafiles, miscfiles

def move_files(docfiles, mediafiles, miscfiles):
    """cut and paste each file into the appropriate folder"""    

    for doc in docfiles:
        move(doc,docpath)
        
    for media in mediafiles:
        move(media,mediapath)
    
    for misc in miscfiles:
        move(misc,miscpath)    
        
def log_name():
    """creates a name for the logfile using the current date and time. 
    removes '.'s and characters not allowed in windows filenames"""
    thismoment=datetime.now().isoformat()
    timelist=[]
    forbiddencharacters=['<','>',':','"','/','\\','|','?','*','.']
    
    for character in thismoment:
        timelist.append(character)
        
    for character in timelist:
        if character in forbiddencharacters:
            timelist.remove(character)
    
    logname=""
    for character in timelist:
        logname+=character
    logname+=".txt"
    return logname

def create_logfile(filename):
    """creates the log file, name generated bycalling log_name"""
    logfile = open(filename, "w")
    return logfile

def write_list(listname, filename):
    """write the contents of a list to a file in the format 1,2,3,4,5,...,n with
    a trailing new line for the last item """
    for item in listname:
        if item == listname[-1]:
            filename.write("%s \n" % item)
        else:                
            filename.write("%s," % item) 
            
def write_list_multi_line(listname, filename):
    """Write the contents of a list to a file with each entry on a new line with
    a trailing new line for the last item """
    for item in listname:
        filename.write("%s \n" % item)    
        
        
if __name__ == "__main__":
    
    logname=log_name()
    logfile=create_logfile(logname)
    doctypes, mediatypes = read_types()
    
    logfile.write(datetime.now().isoformat())
    
    print "The document types are:"
    print doctypes
    logfile.write("\n\nThe document types are: \n")    
    write_list(doctypes, logfile)
        
    print "The media types are:" 
    print mediatypes 
    logfile.write("\nThe media types are: \n")
    write_list(mediatypes, logfile)
    
    
    dirname = select_dir()    
    print "The source directory is: " + dirname + "\n"
    logfile.write("\nThe source directory is: %s \n" % dirname)
    
    docpath, mediapath, miscpath = check_dir(dirname)
    print "The destination directories are:" + "\n" + \
          docpath +"\n" + mediapath + "\n" + miscpath + "\n"
    logfile.write("\nThe destination directories are: \n %s \n %s \n %s \n" % \
                  (docpath , mediapath , miscpath))
        
    filelist=get_files(dirname)
    
    print "The files in the directory are:"   
    
    for i in filelist:
        print i
    logfile.write("\nThe files in the directory are:\n")    
    write_list_multi_line(filelist,logfile)
    
    docfiles,mediafiles,miscfiles=sort_types(filelist)
    
    print "\n" + "The documents are: "
    for doc in docfiles:
        print doc
    print "\n" + "The media files are: "
    for media in mediafiles:
        print media
    print "\n" + "The misc files are: "
    for misc in miscfiles:
        print misc
        
    logfile.write("\nThe documents are:\n")
    write_list_multi_line(docfiles, logfile)
    
    logfile.write("\nThe media files are:\n")
    write_list_multi_line(mediafiles, logfile)  
    
    logfile.write("\nThe misc files are:\n")
    write_list_multi_line(miscfiles, logfile)    

        
    unmovedfiles = filelist
    
    for i in docfiles:
        if i in unmovedfiles:
            unmovedfiles.remove(i)
    
    for i in mediafiles:
        if i in unmovedfiles:
            unmovedfiles.remove(i)
    
    for i in miscfiles:
        if i in unmovedfiles:
            unmovedfiles.remove(i)
    print "\n" + "The following files will not be moved:"
    for file in unmovedfiles:
        print file
        
    logfile.write("\nThe following files will not be moved:")
        
    move_files(docfiles,mediafiles,miscfiles)
    logfile.close()